shiny::runApp()
source('~/GitHub/IPEDS_longitudinal/compile app/cumulitive connections.R')
df <- rsconnect::showMetrics("container_status",
c("connect_count",
"connect_procs"),
appName="ipeds_compiler",
server="shinyapps.io",
from="24w",
interval="1m"
)
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
# http://docs.rstudio.com/shinyapps.io/metrics.html#ApplicationMetrics
df <- rsconnect::showMetrics("container_status",
c("connect_count",
"connect_procs"),
appName="ipeds_compiler",
server="shinyapps.io",
from="24w",
interval="1m"
)
rsconnect::showLogs()
rsconnect::setAccountInfo(name='sc-kaloisio', token='15D617540DEE0D06E1F6C74CF93A5756', secret='8LegPEt+LxSwzT3jM8bP839oxj1KzS5lY23SjH3J')
# http://docs.rstudio.com/shinyapps.io/metrics.html#ApplicationMetrics
df <- rsconnect::showMetrics("container_status",
c("connect_count",
"connect_procs"),
appName="ipeds_compiler",
server="shinyapps.io",
from="24w",
interval="1m"
)
df1 <- df %>%
mutate(date=as_datetime(timestamp)) %>%
select(-timestamp) %>%
arrange(date) %>%
mutate(
n_count=cumsum(connect_count),
n_procs=cumsum(connect_procs),
new_connect=case_when(
connect_count>lag(connect_count,1) ~ connect_count-lag(connect_count,1),
TRUE ~ 0),
n_connect=cumsum(new_connect) # approximate
) %>%
filter(n_count>0)
library(tidyverse)
library(lubridate)
df1 <- df %>%
mutate(date=as_datetime(timestamp)) %>%
select(-timestamp) %>%
arrange(date) %>%
mutate(
n_count=cumsum(connect_count),
n_procs=cumsum(connect_procs),
new_connect=case_when(
connect_count>lag(connect_count,1) ~ connect_count-lag(connect_count,1),
TRUE ~ 0),
n_connect=cumsum(new_connect) # approximate
) %>%
filter(n_count>0)
df2 <- df1 %>%
select(n_connect, date) %>%
gather(key="key", value="value", -date)
p2 <- ggplot(df2) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value, colour=key)) +
facet_wrap(~key)
print(p2)
df <- rsconnect::showMetrics("container_status",
c("connect_count",
"connect_procs"),
appName="ipeds_compiler",
server="shinyapps.io",
from="24w",
interval="1m"
)
df1 <- df %>%
mutate(date=as_datetime(timestamp)) %>%
select(-timestamp) %>%
arrange(date) %>%
mutate(
n_count=cumsum(connect_count),
n_procs=cumsum(connect_procs),
new_connect=case_when(
connect_count>lag(connect_count,1) ~ connect_count-lag(connect_count,1),
TRUE ~ 0),
n_connect=cumsum(new_connect) # approximate
) %>%
filter(n_count>0)
df2 <- df1 %>%
select(n_connect, date) %>%
gather(key="key", value="value", -date)
p2 <- ggplot(df2) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value, colour=key)) +
facet_wrap(~key)
print(p2)
View(df2)
today <- df2 %>% filter(date==today())
head(df2)
today <- df2 %>% filter(date>="2020-08-03")
ptoday <- ggplot(today) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value, colour=key)) +
facet_wrap(~key)
print(ptoday)
View(today)
View(today)
View(today)
today <- df2 %>% filter(date>="2020-08-03") %>%
mutate(value_new = max(value)-value)
ptoday <- ggplot(today) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
today <- df2 %>% filter(date>="2020-08-03") %>%
mutate(value_new = min(value)-value)
ptoday <- ggplot(today) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
today <- df2 %>% filter(date>="2020-08-03") %>%
mutate(value_new = value-min(value))
ptoday <- ggplot(today) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today: ", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
today <- df2 %>% filter(date>=ymd("2020-08-03",tz = "EDT")) %>%
mutate(value_new = value-min(value))
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today: ", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
df1 <- df %>%
mutate(date=as_datetime(timestamp, tz="EST")) %>%
select(-timestamp) %>%
arrange(date) %>%
mutate(
n_count=cumsum(connect_count),
n_procs=cumsum(connect_procs),
new_connect=case_when(
connect_count>lag(connect_count,1) ~ connect_count-lag(connect_count,1),
TRUE ~ 0),
n_connect=cumsum(new_connect) # approximate
) %>%
filter(n_count>0)
df2 <- df1 %>%
select(n_connect, date) %>%
gather(key="key", value="value", -date)
p2 <- ggplot(df2) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value, colour=key)) +
facet_wrap(~key)
print(p2)
today <- df2 %>% filter(date>=ymd("2020-08-03",tz = "EDT")) %>%
mutate(value_new = value-min(value))
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today: ", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
# http://docs.rstudio.com/shinyapps.io/metrics.html#ApplicationMetrics
df <- rsconnect::showMetrics("container_status",
c("connect_count",
"connect_procs"),
appName="ipeds_compiler",
server="shinyapps.io",
from="24w",
interval="1m"
)
df1 <- df %>%
mutate(date=as_datetime(timestamp, tz="EST")) %>%
select(-timestamp) %>%
arrange(date) %>%
mutate(
n_count=cumsum(connect_count),
n_procs=cumsum(connect_procs),
new_connect=case_when(
connect_count>lag(connect_count,1) ~ connect_count-lag(connect_count,1),
TRUE ~ 0),
n_connect=cumsum(new_connect) # approximate
) %>%
filter(n_count>0)
df2 <- df1 %>%
select(n_connect, date) %>%
gather(key="key", value="value", -date)
p2 <- ggplot(df2) +
labs(title="Cumulative Connections", x="", y="") +
geom_line(aes(x=date, y=value, colour=key)) +
facet_wrap(~key)
print(p2)
today <- df2 %>% filter(date>=ymd("2020-08-03",tz = "EDT")) %>%
mutate(value_new = value-min(value))
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today: ", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
today <- df2 %>% filter(date>=ymd(today(),tz = "EDT")) %>%
mutate(value_new = value-min(value))
ptoday <- ggplot(today) +
labs(title=paste0("Number of Connections Today: ", today()), x="", y="") +
geom_line(aes(x=date, y=value_new, colour=key)) +
facet_wrap(~key)
print(ptoday)
shiny::runApp()
