install.packages("ImportExport")
library(ImportExport)
pkgs <- c("tidyverse", "readxl")
for(pkg in pkgs) {
if(!require(pkg, character.only = TRUE)) {
install.packages(pkg)
library(pkg, character.only = TRUE)
}
library(pkg, character.only = TRUE)
}
valuesets <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/valuesets_compiled.csv")
warnings()
valuesets <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/valuesets_compiled.csv")
names(valuesets)
longtable <- read.csv(path = "C:/Users/kaloisio/Documents/IPEDS data/EF_A_compiled.csv")
longtable <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/EF_A_compiled.csv")
longtable <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/EF_A_compiled.csv", stringsAsFactors = F)
valuesets <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/valuesets_compiled.csv", stringsAsFactors = F)
names(valuesets)
names(longtable)
table(valuesets$varName)
table(names(longtable)%in%valuesets$varName)
names(longtable)[names(longtable)%in%valuesets$varName]
dput(names(longtable)[names(longtable)%in%valuesets$varName]
)
valueset_EFA <- valuesets %>% filter(varName%in%c("EFALEVEL", "LINE", "SECTION", "LSTUDY"))
View(valueset_EFA)
head(valueset)
head(valuesets)
View(valueset_EFA)
valueset_EFA <- valuesets %>%
filter(Tablenumber==21,
varName%in%c("EFALEVEL", "LINE", "SECTION", "LSTUDY"))
View(valueset_EFA)
table(valueset_EFA$TableName)
table(valueset_EFA$varName)
table(valueset_EFA$varTitle)
names(longtable)
test <- longtable %>% gather(3:length(names(longtable)), "varName", "var_numeric")
length(names(longtable))
test <- longtable %>% gather("varName", "var_numeric",3:length(names(longtable)))
names(test)
head(test)
tail(test)
test <- longtable %>% gather("varName", "var_numeric", names(longtable)[names(longtable)%in%valuesets$varName])
View(test)
table(test$varName)
table(test$varName, test$var_numeric)
table(valueset_EFA$varName, valueset_EFA$Codevalue
)
table(test$varName, test$var_numeric, useNA = "a")
test <- longtable %>% gather("varName", "var_numeric", names(longtable)[names(longtable)%in%valueset_EFA$varName])
View(test)
ds <- longtable %>% gather("varName", "var_numeric", names(longtable)[names(longtable)%in%valueset_EFA$varName])
rm(test)
names(valueset_EFA)
ds_join <- left_join(ds, valueset_EFA)
names(valueset_EFA)
ds <- longtable %>% gather("varName", "Codevalue", names(longtable)[names(longtable)%in%valueset_EFA$varName])
pkgs <- c("tidyverse", "readxl")
for(pkg in pkgs) {
if(!require(pkg, character.only = TRUE)) {
install.packages(pkg)
library(pkg, character.only = TRUE)
}
library(pkg, character.only = TRUE)
}
longtable <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/EF_A_compiled.csv", stringsAsFactors = F)
names(longtable)
valuesets <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/valuesets_compiled.csv", stringsAsFactors = F)
names(valuesets)
table(valuesets$varName)
names(longtable)[names(longtable)%in%valuesets$varName]
valueset_EFA <- valuesets %>%
filter(Tablenumber==21,
varName%in%c("EFALEVEL", "LINE", "SECTION", "LSTUDY"))
names(longtable)
ds <- longtable %>% gather("varName", "Codevalue", names(longtable)[names(longtable)%in%valueset_EFA$varName])
longtable <- read.csv("C:/Users/kaloisio/Documents/IPEDS data/EF_A_compiled.csv", stringsAsFactors = F)
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
rm("script_vartable","script_peerList","script_filename_to_tablename","script_add_valuesets","script_varnames_to_titles","pkg","pkgs")
peerInfo <- IPEDS_peers_from_file()
peers_UNITID <- as.character(peerInfo[['peers_for_IPEDS']])
longtable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling longitudinal/EF_A_compiled.csv"
valuesets_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/valuesets_compiled_rev.csv"
vartable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/vartable_compiled_rev_EMedits.csv"
longtable_full <- read.csv(longtable_filepath,stringsAsFactors = F)
surveyName <- names(table(longtable_full['SURVEYNAME']))
names(longtable_full)
longtable_full[['SURVEYNAME']] <- "EF_A"
names(longtable_full)
head(longtable_full$SURVEYNAME)
surveyName <- names(table(longtable_full['SURVEYNAME']))
if (exists("peers_UNITID")) {
print("Subsetting IPEDS table to the peer group that has been provided.")
longtable <- longtable_full[longtable_full[['UNITID']] %in% peers_UNITID,]
}
if (! exists("peers_UNITID")) {
print("You have not provided a peer group, so you are using the entire IPEDS table.")
longtable <- longtable_full
}
valuesets_full <- read.csv(valuesets_filepath,stringsAsFactors = F)
vartable_full <- read.csv(vartable_filepath,stringsAsFactors = F)
valuesets_full[['SURVEYNAME']] <- table_from_column(valuesets_full[['TABLENAME']])
valuesets <- valuesets_full[valuesets_full['SURVEYNAME']==surveyName,]
vartable_full[['SURVEYNAME']] <- table_from_column(vartable_full[['TABLENAME']])
vartable <- vartable_full[vartable_full['SURVEYNAME']==surveyName,]
if (is_empty(valuesets[['CODEVALUE']])) {
print(paste("Table",surveyName,"","does not have any valuesets. Proceed with initial longtable."))
}
if (! is_empty(valuesets[['CODEVALUE']])){
longtable <- add_values(longtable,valuesets)
}
(! is_empty(valuesets[['CODEVALUE']]))
longtable_preserved <- longtable
vars_of_interest <- select_vars(longtable,varnames = vartable)
longtable_with_names <- change_varnames_vartitles(longtable, varnames=vartable, vars = vars_of_interest)
typeof(vars_of_interest)
vars_of_interest <- select_vars(longtable,varnames = vartable)
View(IPEDS_peers_from_file)
select_vars <- function(longtable, varnames) {
vars <- list()
for (name in names(longtable)[names(longtable)%in%varnames$VARNAME]) vars[[name]] <- names(longtable)[grepl(paste0(name, "_*"), names(longtable))]
vars <- unlist(vars, use.names = F)
return(vars)
}
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_varnames_to_titles))
vars_of_interest <- select_vars(longtable,varnames = vartable)
longtable_with_names <- change_varnames_vartitles(longtable, varnames=vartable, vars = vars_of_interest)
vars_of_interest <- select_vars(longtable,varnames = vartable)
rm(vars)
rm(vars_of_interest)
vars_of_interest <- list()
for (name in names(longtable)[names(longtable)%in%varnames$VARNAME]) vars[[name]] <- names(longtable)[grepl(paste0(name, "_*"), names(longtable))]
for (name in names(longtable)[names(longtable)%in%vartable$VARNAME]) vars_of_interest[[name]] <- names(longtable)[grepl(paste0(name, "_*"), names(longtable))]
vars_of_interest
names(longtable)
names(longtable) %in% vartable$VARNAME
vartable$VARNAME
table(vartable_full$SURVEYNAME)
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
rm("script_vartable","script_peerList","script_filename_to_tablename","script_add_valuesets","script_varnames_to_titles","pkg","pkgs")
peerInfo <- IPEDS_peers_from_file()
peers_UNITID <- as.character(peerInfo[['peers_for_IPEDS']])
longtable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling longitudinal/EF_A_compiled.csv"
valuesets_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/valuesets_compiled_rev.csv"
vartable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/vartable_compiled_rev_EMedits.csv"
longtable_full <- read.csv(longtable_filepath,stringsAsFactors = F)
longtable_full[['SURVEYNAME']] <- "EFA"
surveyName <- names(table(longtable_full['SURVEYNAME']))
#If you have uploaded a list of peers, segment longtable
if (exists("peers_UNITID")) {
print("Subsetting IPEDS table to the peer group that has been provided.")
longtable <- longtable_full[longtable_full[['UNITID']] %in% peers_UNITID,]
}
if (! exists("peers_UNITID")) {
print("You have not provided a peer group, so you are using the entire IPEDS table.")
longtable <- longtable_full
}
valuesets_full <- read.csv(valuesets_filepath,stringsAsFactors = F)
vartable_full <- read.csv(vartable_filepath,stringsAsFactors = F)
valuesets_full[['SURVEYNAME']] <- table_from_column(valuesets_full[['TABLENAME']])
valuesets <- valuesets_full[valuesets_full['SURVEYNAME']==surveyName,]
vartable_full[['SURVEYNAME']] <- table_from_column(vartable_full[['TABLENAME']])
vartable <- vartable_full[vartable_full['SURVEYNAME']==surveyName,]
if (is_empty(valuesets[['CODEVALUE']])) {
print(paste("Table",surveyName,"","does not have any valuesets. Proceed with initial longtable."))
}
if (! is_empty(valuesets[['CODEVALUE']])){
longtable <- add_values(longtable,valuesets)
}
peerInfo <- IPEDS_peers_from_file()
peers_UNITID <- as.character(peerInfo[['peers_for_IPEDS']])
if (exists("peers_UNITID")) {
print("Subsetting IPEDS table to the peer group that has been provided.")
longtable <- longtable_full[longtable_full[['UNITID']] %in% peers_UNITID,]
}
if (! exists("peers_UNITID")) {
print("You have not provided a peer group, so you are using the entire IPEDS table.")
longtable <- longtable_full
}
valuesets_full <- read.csv(valuesets_filepath,stringsAsFactors = F)
vartable_full <- read.csv(vartable_filepath,stringsAsFactors = F)
valuesets_full[['SURVEYNAME']] <- table_from_column(valuesets_full[['TABLENAME']])
valuesets <- valuesets_full[valuesets_full['SURVEYNAME']==surveyName,]
vartable_full[['SURVEYNAME']] <- table_from_column(vartable_full[['TABLENAME']])
vartable <- vartable_full[vartable_full['SURVEYNAME']==surveyName,]
if (is_empty(valuesets[['CODEVALUE']])) {
print(paste("Table",surveyName,"","does not have any valuesets. Proceed with initial longtable."))
}
if (! is_empty(valuesets[['CODEVALUE']])){
longtable <- add_values(longtable,valuesets)
}
longtable_preserved <- longtable
vars_of_interest <- select_vars(longtable,varnames = vartable)
longtable_with_names <- change_varnames_vartitles(longtable, varnames=vartable, vars = vars_of_interest)
longtable_with_names <- change_varnames_vartitles(longtable = longtable, varnames=vartable, vars = vars_of_interest)
varnames <- vartable
vars <- vars_of_interest
ds <- longtable %>%
#'because of multiple years need to add a unique row id for spread to work
dplyr::mutate(ROW_ID = 1:nrow(longtable)) %>%
#' gather long table with all variables that need to be changed
tidyr::gather("VARNAME", "VALUE", vars) %>%
#' separate the _value temporarliy
tidyr::separate(VARNAME, into = c("VARNAME", "extra_temp"), sep = "_", remove=T) %>%
#' left join with clean var title
dplyr::left_join(select(varnames,
"VARNAME",
"VARTITLE_USE")) %>%
#' re paste the _value column
dplyr::mutate(VARTITLE_CLEAN = ifelse(!is.na(extra_temp),
paste0(VARTITLE_USE, "_", extra_temp), VARTITLE_USE)) %>%
#'remove unneeded variables for spread to be happy
dplyr::select(-VARTITLE_USE, -extra_temp, -VARNAME) %>%
#' rename vartitle_clean to be consistant
dplyr::rename(VARTITLE = VARTITLE_CLEAN) %>%
#' spread to make dataset wide again
tidyr::spread(key = VARTITLE, value = VALUE) %>%
#' remove row id
dplyr::select(-ROW_ID)
vars
vars <- as.list(vars)
vars
ds <- longtable %>%
#'because of multiple years need to add a unique row id for spread to work
dplyr::mutate(ROW_ID = 1:nrow(longtable)) %>%
#' gather long table with all variables that need to be changed
tidyr::gather("VARNAME", "VALUE", vars) %>%
#' separate the _value temporarliy
tidyr::separate(VARNAME, into = c("VARNAME", "extra_temp"), sep = "_", remove=T) %>%
#' left join with clean var title
dplyr::left_join(select(varnames,
"VARNAME",
"VARTITLE_USE")) %>%
#' re paste the _value column
dplyr::mutate(VARTITLE_CLEAN = ifelse(!is.na(extra_temp),
paste0(VARTITLE_USE, "_", extra_temp), VARTITLE_USE)) %>%
#'remove unneeded variables for spread to be happy
dplyr::select(-VARTITLE_USE, -extra_temp, -VARNAME) %>%
#' rename vartitle_clean to be consistant
dplyr::rename(VARTITLE = VARTITLE_CLEAN) %>%
#' spread to make dataset wide again
tidyr::spread(key = VARTITLE, value = VALUE) %>%
#' remove row id
dplyr::select(-ROW_ID)
ds <- longtable
ds <- dplyr::mutate(longable, ROW_ID = 1:nrow(longtable))
ds <- dplyr::mutate(longtable, ROW_ID = 1:nrow(longtable))
ds <- tidyr::gather(longtable, "VARNAME", "VALUE", vars)
?tidyr::gather
vars <- names(vars)
vars
vars_of_interest <- select_vars(longtable,varnames = vartable)
vars <- vars_of_interest
vars
ds <- tidyr::gather(longtable, key="VARNAME", value="VALUE", vars)
names(longtable)
vars2 <- c()
for (i in length(vars_of_interest)) {c(vars2,vars_of_interest[i])}
vars2
vars2 <- c()
for (i in length(vars_of_interest)) {c(vars2,vars_of_interest[[i]])}
length(vars_of_interest)
for (i in length(vars_of_interest)) {vars2 <- c(vars2,vars_of_interest[i])}
length(vars_of_interest)
vars_of_interest[1]
vars2 <- c()
for (i in 1:length(vars_of_interest)) {vars2 <- c(vars2,vars_of_interest[i])}
ds <- tidyr::gather(longtable, key="VARNAME", value="VALUE", vars2)
ds <- tidyr::gather(longtable, key="VARNAME", value="VALUE", !! vars2)
ds <- tidyr::separate(longtable, VARNAME, into = c("VARNAME", "extra_temp"), sep = "_", remove=T)
tidyr::separate()
tidyr::separate
View(ds)
ds <- dplyr::left_join(longtable, select(varnames,
"VARNAME",
"VARTITLE_USE"))
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
rm("script_vartable","script_peerList","script_filename_to_tablename","script_add_valuesets","script_varnames_to_titles","pkg","pkgs")
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/develop_em/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/develop_em/peerList.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerFile))
eval(parse(text = script_peerList))
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
rm("script_vartable","script_peerList","script_filename_to_tablename","script_add_valuesets","script_varnames_to_titles","pkg","pkgs")
script_vartable <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/compile_varname_valueset.R", ssl.verifypeer = FALSE)
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
eval(parse(text = script_vartable))
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
rm("script_vartable","script_peerList","script_filename_to_tablename","script_add_valuesets","script_varnames_to_titles","pkg","pkgs")
longtable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling longitudinal/IC_AY_compiled_2.csv"
valuesets_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/valuesets_compiled_rev.csv"
vartable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/vartable_compiled_rev_EMedits.csv"
longtable_full <- read.csv(longtable_filepath,stringsAsFactors = F)
surveyName <- names(table(longtable_full['SURVEYNAME']))
longtable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling longitudinal/IC_AY_compiled_2.csv"
valuesets_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/valuesets_compiled_rev.csv"
vartable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/vartable_compiled_rev_EMedits.csv"
longtable_filepath
longtable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling longitudinal/IC_AY_compiled_2.csv"
valuesets_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/valuesets_compiled_rev.csv"
vartable_filepath <- "Q:/Staff/University-Wide/Peer Comparison Database/IPEDS/Access Database/Compiling var info/R export/vartable_compiled_rev_EMedits.csv"
longtable_full <- read.csv(longtable_filepath,stringsAsFactors = F)
surveyName <- names(table(longtable_full['SURVEYNAME']))
if (exists("peers_UNITID")) {
print("Subsetting IPEDS table to the peer group that has been provided.")
longtable <- longtable_full[longtable_full[['UNITID']] %in% peers_UNITID,]
}
if (! exists("peers_UNITID")) {
print("You have not provided a peer group, so you are using the entire IPEDS table.")
longtable <- longtable_full
}
valuesets_full <- read.csv(valuesets_filepath,stringsAsFactors = F)
vartable_full <- read.csv(vartable_filepath,stringsAsFactors = F)
valuesets_full[['SURVEYNAME']] <- table_from_column(valuesets_full[['TABLENAME']])
valuesets <- valuesets_full[valuesets_full['SURVEYNAME']==surveyName,]
vartable_full[['SURVEYNAME']] <- table_from_column(vartable_full[['TABLENAME']])
vartable <- vartable_full[vartable_full['SURVEYNAME']==surveyName,]
if (is_empty(valuesets[['CODEVALUE']])) {
print(paste("Table",surveyName,"","does not have any valuesets. Proceed with initial longtable."))
}
if (! is_empty(valuesets[['CODEVALUE']])){
longtable <- add_values(longtable,valuesets)
}
longtable_preserved <- longtable
vars_of_interest <- select_vars(longtable,varnames = vartable)
longtable_with_names <- change_varnames_vartitles(longtable, varnames=vartable, vars = vars_of_interest)
outputdir <- choose.dir()
write.csv (longtable_with_names,paste(outputdir,"\\",surveyName,"_compiled_NEW.csv",sep=""),row.names=FALSE,na="")
script_peerList <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/peerList.R", ssl.verifypeer = FALSE)
script_filename_to_tablename <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/filename_to_tablename.R", ssl.verifypeer = FALSE)
script_add_valuesets <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/add_valuesets.R", ssl.verifypeer = FALSE)
script_varnames_to_titles <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/change_varnames_to_vartitles.R", ssl.verifypeer = FALSE)
script_acadyear <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/acad_yr_function.R", ssl.verifypeer = FALSE)
script_varname_to_varID <- RCurl::getURL("https://raw.githubusercontent.com/emmamorgan-tufts/IPEDS_longitudinal/master/varname_to_varID.R", ssl.verifypeer = FALSE)
eval(parse(text = script_peerList))
eval(parse(text = script_filename_to_tablename))
eval(parse(text = script_add_valuesets))
eval(parse(text = script_varnames_to_titles))
eval(parse(text = script_acadyear))
eval(parse(text = script_varname_to_varID))
rm("script_peerList","script_filename_to_tablename","script_acadyear",
"script_add_valuesets", "script_varname_to_varID","script_varnames_to_titles",
"pkg","pkgs")
IPEDS_data_location_general <- "Q:\\Staff\\University-Wide\\Peer Comparison Database\\IPEDS\\Original IPEDS Data"
IPEDS_data_location <- paste(IPEDS_data_location_general,surveyFolder, sep="\\")
IPEDS_test <- merge_IPEDS_data(IPEDS_data_location, peer_filepath)
peer_filepath <- NULL
IPEDS_test <- merge_IPEDS_data(IPEDS_data_location, peer_filepath)
IPEDS_test <- merge_IPEDS_data(IPEDS_data_location)
IPEDS_data_location_general <- "Q:\\Staff\\University-Wide\\Peer Comparison Database\\IPEDS\\Original IPEDS Data"
IPEDS_data_location <- paste(IPEDS_data_location_general,surveyFolder, sep="\\")
surveyFolder <- "Admissions"
IPEDS_test_nopeers <- merge_IPEDS_data(IPEDS_data_location = IPEDS_data_location)
